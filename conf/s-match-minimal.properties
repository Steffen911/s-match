# S-Match configuration file for minimal links.

# Linguistic Oracle configuration. The class specified as LinguisticOracle
# should implement ILinguisticOracle interface.
Global.LinguisticOracle=it.unitn.disi.smatch.oracles.wordnet.WordNet
Global.LinguisticOracle.WordNet.JWNLPropertiesPath=../conf/file_properties.xml

# Sense Matcher configuration. The class specified as SenseMatcher
# should implement ISenseMatcher interface.
Global.SenseMatcher=it.unitn.disi.smatch.oracles.wordnet.InMemoryWordNetBinaryArray
# skip the loading of arrays
# Global.SenseMatcher.InMemoryWordNetBinaryArray.loadArrays=false
Global.SenseMatcher.InMemoryWordNetBinaryArray.adjectiveSynonymFile=../data/wordnet/2.1/cache/adj_syn.arr
Global.SenseMatcher.InMemoryWordNetBinaryArray.adjectiveAntonymFile=../data/wordnet/2.1/cache/adj_opp.arr
Global.SenseMatcher.InMemoryWordNetBinaryArray.nounMGFile=../data/wordnet/2.1/cache/noun3_mg.arr
Global.SenseMatcher.InMemoryWordNetBinaryArray.nounAntonymFile=../data/wordnet/2.1/cache/noun_opp.arr
Global.SenseMatcher.InMemoryWordNetBinaryArray.verbMGFile=../data/wordnet/2.1/cache/verb_mg.arr
Global.SenseMatcher.InMemoryWordNetBinaryArray.nominalizationsFile=../data/wordnet/2.1/cache/nominalizations.arr
Global.SenseMatcher.InMemoryWordNetBinaryArray.adverbsAntonymFile=../data/wordnet/2.1/cache/adv_opp.arr
# WordNet is used only during conversion
Global.SenseMatcher.InMemoryWordNetBinaryArray.JWNLPropertiesPath=../conf/file_properties.xml

# Mapping Renderer configuration. The class specified as MappingRenderer
# should implement IMappingRenderer interface.
MappingRenderer=it.unitn.disi.smatch.renderers.mapping.PlainMappingRenderer

# Context Loader configuration. The class specified as ContextLoader 
# should implement IContextLoader interface.
ContextLoader=it.unitn.disi.smatch.loaders.context.CTXMLContextLoader
#ContextLoader=it.unitn.disi.smatch.loaders.context.TabContextLoader
#ContextLoader.TabContextLoader.key=value

# Matcher Library configuration. The class specified as MatcherLibrary
# should implement IMatcherLibrary interface.
MatcherLibrary=it.unitn.disi.smatch.matchers.element.MatcherLibrary
# instance of ISenseMatcher interface
MatcherLibrary.MatcherLibrary.senseMatcher=Global.SenseMatcher
# instance of ILinguisticOracle interface
MatcherLibrary.MatcherLibrary.linguisticOracle=Global.LinguisticOracle
# use only WordNet (false) or use also other matchers (true)
MatcherLibrary.MatcherLibrary.useWeakSemanticsElementLevelMatchersLibrary=true
# list of string matchers, each one should implement IStringBasedElementLevelSemanticMatcher
MatcherLibrary.MatcherLibrary.stringMatchers=it.unitn.disi.smatch.matchers.element.string.Synonym;it.unitn.disi.smatch.matchers.element.string.Prefix;it.unitn.disi.smatch.matchers.element.string.Suffix;it.unitn.disi.smatch.matchers.element.string.NGram;it.unitn.disi.smatch.matchers.element.string.EditDistanceOptimized
# example of a configuration for a specific matcher
#MatcherLibrary.MatcherLibrary.stringMatchers.EditDistance.threshold=0.9
# list of sense and gloss matchers, each one should implement ISenseGlossBasedElementLevelSemanticMatcher
MatcherLibrary.MatcherLibrary.senseGlossMatchers=
# properties to pass down to each sense and gloss matcher
MatcherLibrary.MatcherLibrary.senseGlossMatchers.*.linguisticOracle=Global.LinguisticOracle
MatcherLibrary.MatcherLibrary.senseGlossMatchers.*.senseMatcher=Global.SenseMatcher
# example of a configuration for a specific matcher
#MatcherLibrary.MatcherLibrary.senseGlossMatchers.WNExtendedGloss.threshold=5

# Tree Matcher for minimal links.
TreeMatcher=it.unitn.disi.smatch.matchers.structure.tree.OptimizedStageTreeMatcher
TreeMatcher.OptimizedStageTreeMatcher.NodeMatcher=it.unitn.disi.smatch.matchers.structure.node.OptimizedStageNodeMatcher
TreeMatcher.OptimizedStageTreeMatcher.NodeMatcher.OptimizedStageNodeMatcher.SATSolver=it.unitn.disi.smatch.deciders.openSATcached
